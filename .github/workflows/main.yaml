name: "Build and deploy emottak-sertifikatvalidator"
on:
  push:
    branches:
      - "main"
    paths-ignore:
      - '**.md'
env:
  "IMAGE": "ghcr.io/${{ github.repository }}:${{ github.sha }}"
jobs:
  "build":
    name: "build"
    runs-on: "ubuntu-18.04"
    steps:
    - uses: "actions/checkout@v3"
    - uses: "actions/cache@v3"
      with:
        "path": "~/.m2/repository"
        "key": "${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}"
        "restore-keys": "${{ runner.os }}-maven-"
    - uses: "actions/setup-java@v3"
      with:
        java-version: 16
        distribution: temurin
    - name: "compile and run tests"
      run: "mvn install"
    - name: "Run Maven release"
      run: ./release.sh
      env:
        GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
    - name: "Login to GitHub Docker Registry"
      uses: "docker/login-action@v2"
      with:
        "registry": "ghcr.io"
        "username": "${{ github.actor }}"
        "password": "${{ secrets.GITHUB_TOKEN }}"
    - name: "Build and push the Docker image"
      run: "docker build --pull --tag ${IMAGE} . && docker push ${IMAGE}"

  "deployAppToDev":
    name: "Deploy to dev"
    needs: "build"
    runs-on: "ubuntu-18.04"
    steps:
    - uses: "actions/checkout@v3"
    - name: "Deploy secret to DEV"
      uses: "nais/deploy/actions/deploy@v1"
      env:
        "APIKEY": "${{ secrets.NAIS_DEPLOY_APIKEY }}"
        "CLUSTER": "dev-fss"
        "RESOURCE": ".nais/secrets.yaml"
        "VAR": "truststore=${{ secrets.TRUSTSTORE_FILE_DEV }},truststorePass=${{ secrets.TRUSTSTORE_PASS_DEV }},keystore=${{ secrets.KEYSTORE_FILE_DEV }},keystorePass=${{ secrets.KEYSTORE_PASS_DEV }}"
    - name: "Deploy app to DEV"
      uses: "nais/deploy/actions/deploy@v1"
      env:
        "APIKEY": "${{ secrets.NAIS_DEPLOY_APIKEY }}"
        "CLUSTER": "dev-fss"
        "RESOURCE": ".nais/nais.yaml"
        "VARS": ".nais/dev.yaml"
  "deployAppToProd":
    name: "Deploy to prod"
    needs: "deployAppToDev"
    runs-on: "ubuntu-18.04"
    steps:
    - uses: "actions/checkout@v3"
    - name: "Deploy secret to PROD"
      uses: "nais/deploy/actions/deploy@v1"
      env:
        "APIKEY": "${{ secrets.NAIS_DEPLOY_APIKEY }}"
        "CLUSTER": "prod-fss"
        "RESOURCE": ".nais/secrets.yaml"
        "VAR": "truststore=${{ secrets.TRUSTSTORE_FILE_PROD }},truststorePass=${{ secrets.TRUSTSTORE_PASS_PROD }},keystore=${{ secrets.KEYSTORE_FILE_PROD }},keystorePass=${{ secrets.KEYSTORE_PASS_PROD }}"
    - name: "Deploy app to PROD"
      uses: "nais/deploy/actions/deploy@v1"
      env:
        "APIKEY": "${{ secrets.NAIS_DEPLOY_APIKEY }}"
        "CLUSTER": "prod-fss"
        "RESOURCE": ".nais/nais.yaml"
        "VARS": ".nais/prod.yaml"
  "deployAlertsToDev":
    name: "Deploy alerts to dev"
    needs: "build"
    runs-on: "ubuntu-18.04"
    steps:
      - uses: "actions/checkout@v3"
      - name: "Deploy alerts to DEV"
        uses: "nais/deploy/actions/deploy@v1"
        env:
          "APIKEY": "${{ secrets.NAIS_DEPLOY_APIKEY }}"
          "CLUSTER": "dev-fss"
          "RESOURCE": ".nais/alerts-dev.yaml"
          "VARS": ".nais/dev.yaml"
  "deployAlertsToProd":
    name: "Deploy alerts to prod"
    needs: "deployAlertsToDev"
    runs-on: "ubuntu-18.04"
    steps:
    - uses: "actions/checkout@v3"
    - name: "Deploy alerts to PROD"
      uses: "nais/deploy/actions/deploy@v1"
      env:
        "APIKEY": "${{ secrets.NAIS_DEPLOY_APIKEY }}"
        "CLUSTER": "prod-fss"
        "RESOURCE": ".nais/alerts-prod.yaml"
        "VARS": ".nais/prod.yaml"
